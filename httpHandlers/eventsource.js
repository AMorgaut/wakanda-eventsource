var	sse;sse = require("wakanda-eventsource");function sendServerEvents(httpRequest, httpResponse) {	var		connection,		workerPort,		ref;	ref = 0;	connection = httpResponse;	// Specify that we'll send server events	httpResponse.contentType = "text/event-stream";	workerPort = new SharedWorker(sse.WORKER_PATH, sse.WORKER_ID).port;	workerPort.onmessage = function onmessage(event) {		var			data;		data = event.data;        switch (data.type) {        case "sendDatas":            // We send the chunk that needs to be send now            connection.sendChunkedData(data.message);			// For now, we need to release the wait for the response to be sent            application.exitWait();            // We wait again for the next datas            wait();            break;		case "ack":			ref = data.ref;			break;		default:			console.warning('unexpected worker message', data);        }	};	// We register to tell to the SharedWorker to send us the message when it's fired	workerPort.postMessage({type: "register"});	// Wait to keep the context alive	wait();}